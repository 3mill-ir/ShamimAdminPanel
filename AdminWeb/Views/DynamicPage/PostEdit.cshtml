@model AdminWeb.Models.DataModels.PostDataModel
    @using AdminWeb.Models.BLL
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section CSS_Requested{
    <link href="~/Content/assets/global/plugins/dropzone/dropzone.min.css" rel="stylesheet">
    <link href="~/Content/assets/global/plugins/input-text/style.min.css" rel="stylesheet">
    <link href="~/Content/assets/global/plugins/step-form-wizard/css/step-form-wizard.min.css" rel="stylesheet">
    <link href="~/Content/assets/global/css/PipoStyle.css" rel="stylesheet" />
    <link href="~/Content/jquery.Bootstrap-PersianDateTimePicker.css" rel="stylesheet" />
    <style>
        .note-editable {
            height: 110px !important;
        }

        .icheckbox_square-blue {
            background-color: white !important;
        }

        .popover {
            max-width: none !important;
        }
    </style>
}

@section js_Requested
{
    <script src="~/Content/assets/global/plugins/switchery/switchery.min.js"></script> <!-- IOS Switch -->
    <script src="~/Content/assets/global/plugins/bootstrap-tags-input/bootstrap-tagsinput.min.js"></script> <!-- Select Inputs -->
    <script src="~/Content/assets/global/plugins/dropzone/dropzone.min.js"></script>  <!-- Upload Image & File in dropzone -->
    <script src="~/Content/assets/global/js/pages/form_icheck.js"></script>  <!-- Change Icheck Color - DEMO PURPOSE - OPTIONAL -->
    <script src="~/Content/assets/global/plugins/typed/typed.min.js"></script> <!-- Animated Typing -->
    <script src="~/Content/assets/global/js/pages/editor.js"></script>
    <script src="~/Content/ckeditor/ckeditor.js"></script>
    <script type="text/javascript" src="~/CKFinderScripts/ckfinder.js"></script>
    <script src="~/Content/ckeditor/adapters/jquery.js"></script>
    <script src="~/Content/assets/global/plugins/step-form-wizard/plugins/parsley/parsley.min.js"></script> <!-- OPTIONAL, IF YOU NEED VALIDATION -->
    <script src="~/Content/assets/global/plugins/step-form-wizard/js/step-form-wizard.js"></script> <!-- Step Form Validation -->
    <script src="~/Content/assets/global/js/pages/form_wizard.js"></script>
    <script src="~/Content/assets/admin/layout1/js/layout.js"></script>
    <script src="~/Content/assets/global/plugins/noty/jquery.noty.packaged.min.js"></script>  <!-- Notifications -->
    <script src="~/Content/assets/global/js/pages/notifications.js"></script>
    <script src="~/Scripts/DateTimePicker/jalaali.js" type="text/javascript"></script>
    <script src="~/Scripts/DateTimePicker/jquery.Bootstrap-PersianDateTimePicker.js" type="text/javascript"></script>
    <script>
        jQuery(document).ready(function () {
            generate('top', '.page-content', '', '@ViewBag.Notification', 'topbar');

            $("#Language").change(function () {
                $("#F_MenuID").empty();
                $("#select2-chosen-2").empty();
                $("#select2-chosen-2").append('انتخاب زیر منو ...');
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetLanguageMenus", "Menu")', // we are calling json method
                    dataType: 'json',
                    data: { lang: $("#Language").val() },
                    success: function (states) {
                        // states contains the JSON formatted list
                        // of states passed from the controller
                        $.each(states, function (i, state) {
                            $("#F_MenuID").append('<option value="' + state.Value + '">' + state.Text + '</option>');
                        }); // here we are adding option for States

                    },
                    error: function (ex) {
                        alert('Failed to retrieve states.' + ex);
                    }
                });
                return false;
            });


        });
    </script>

    <script type="text/javascript">
        function pipolinkClicked(el) {
            var c = $("#form-field-select-1").find(":selected").attr("Value");
            var temp = el.split("_");
            var myid = temp[1];
            $("#PipoModalBody").empty();
            $("#PipoModalBody").append('<p> @Resource.Resource.View_AreYouShure' + ' (#' + myid + ')</p>');
            var $self = $("#PipoModalForm");
            $self.attr('action', '/DynamicPage/PostDelete?ID=' + myid + "&Page=" + 1);
        };
    </script>
}
@{Session["dynamic-user-folder"] = ViewBag.UserImageFolder;}
<div class="row">
    <div class="col-lg-12">
        <div class="tabs tabs-linetriangle">
            <div class="tab-content center">
                <div class="tab-pane active" id="validation">
                    @using (Html.BeginForm("PostEdit", "DynamicPage", FormMethod.Post,
new { enctype = "multipart/form-data", @class = "wizard wizard-validation", data_style = "arrow" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(m => m.HTMLname)
                        @Html.HiddenFor(m => m.ImagePath)
                        <fieldset style="height: 880px;">
                            <legend>اطلاعات پایه</legend>
                            <div class="row">
                                <div class="col-md-7">
                                    <div class="form-group">
                                        <label for="">@Html.DisplayNameFor(model => model.Tittle)</label>
                                        @Html.TextAreaFor(model => model.Tittle, new { @class = "form-control form-white", id = "Title", style = "height:130px;", @type = "text", required = "", data_parsley_group = "block0" })
                                        @Html.ValidationMessageFor(model => model.Tittle)
                                    </div>
                                    <div class="form-group">
                                        <label for="">@Html.DisplayNameFor(model => model.Description)</label>
                                        @Html.TextAreaFor(model => model.Description, new { @class = "form-control form-white", style = "height:250px;", @id = "Descript", @type = "text" })
                                        @Html.ValidationMessageFor(model => model.Description)
                                    </div>
                                    <div class="form-group">
                                        @Html.DisplayNameFor(model => model.Tags)
                                        @Html.TextBoxFor(model=>model.Tags, new { @class = "form-control form-white select-tags", id = "myAutocomplete" })
                                        @Html.ValidationMessageFor(model => model.Tags)
                                    </div>
                                    <div class="form-group">
                                        @Html.Label(Resource.Resource.Post_CreatedDateOnUtc)
                                        @Html.ValidationMessageFor(model => model.CreatedOnUTC)
                                        <div class="input-group">
                                            <div class="input-group-addon" data-disablebeforetoday="false" data-mddatetimepicker="true" data-targetselector="#exampleInput1" data-trigger="click" data-enabletimepicker="true" data-mdpersiandatetimepicker="" data-mdformat="yyyy/MM/dd HH:mm:ss" data-mdpersiandatetimepickerselecteddatetime="{&quot;Year&quot;:1395,&quot;Month&quot;:6,&quot;Day&quot;:13,&quot;Hour&quot;:0,&quot;Minute&quot;:0,&quot;Second&quot;:0}" style="cursor: pointer;" data-original-title="" title="" data-mdpersiandatetimepickershowing="false">
                                                <span class="glyphicon glyphicon-calendar"></span>
                                            </div>
                                            @Html.TextBox("PostJalaliDate",Tools.GetDateTimeReturnJalaliDate(Model.CreatedOnUTC??default(DateTime)), new { @class = "form-control form-white", id = "exampleInput1", placeholder = @Resource.Resource.View_FromDate,style= "direction: ltr;text-align: left; " })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-5">
                                    <div class="form-group">
                                        <div class="fileinput fileinput-new" data-provides="fileinput">
                                            <label for="exampleInputEmail1">@Html.DisplayNameFor(model => model.ImagePath)</label>
                                            <div class="fileinput-new thumbnail">
                                                <img data-src="" src="@ViewBag.UserImageFolder@Model.ImagePath" style="max-height:275px;width:100%;" class="img-responsive" alt="@Model.ImageAlt">
                                            </div>
                                            <div class="fileinput-preview fileinput-exists thumbnail"></div>
                                            <div>
                                                <span class="btn btn-default btn-file">
                                                    <span class="fileinput-new">انتخاب عکس ...</span>
                                                    <span class="fileinput-exists">ویرایش</span>
                                                    <input type="file" name="MyFile">
                                                </span>
                                                <a href="#" class="btn btn-default fileinput-exists" data-dismiss="fileinput">حذف</a>
                                            </div>
                                        </div>
                                        @Html.ValidationMessageFor(model => model.ImagePath)
                                    </div>
                                    <div class="form-group">
                                        <label for="exampleInputEmail1">@Html.DisplayNameFor(model => model.ImageAlt)</label>
                                        @Html.TextBoxFor(model => model.ImageAlt, new { @class = "form-control form-white" })
                                        @Html.ValidationMessageFor(model => model.ImageAlt)
                                    </div>
                                </div>
                                <div class="col-lg-12">
                                    <div class="form-group">
                                        <label for="exampleInputEmail1">@Html.DisplayNameFor(model => model.Detail)</label>
                                        @Html.TextAreaFor(model => model.Detail, new { @class = "ckeditor", @id = "exampleInputEmail1", @type = "text" })
                                        @Html.ValidationMessageFor(model => model.Detail)
                                    </div>
                                </div>
                            </div>
                        </fieldset>
                        <fieldset style="height: 250px;">
                            <legend>سئو</legend>
                            <div class="row">
                                <div class="col-lg-6">
                                    <div class="form-group">
                                        <label for="exampleInputEmail1">@Html.DisplayNameFor(model => model.MetaDescription)</label>
                                        @Html.TextBoxFor(model => model.MetaDescription, new { @class = "form-control", @id = "exampleInputEmail1", @placeholder = "توضیحات را وارد کنید", @type = "text", rel = "popover", data_placement = "bottom", data_content = "توضیحات در هدر صفحات گنجانده می شود" })
                                        @Html.ValidationMessageFor(model => model.MetaDescription)
                                    </div>
                                </div>
                                <div class="col-lg-6">
                                    <div class="form-group">
                                        <label for="exampleInputEmail1">@Html.DisplayNameFor(model => model.MetaTittle)</label>
                                        @Html.TextBoxFor(model => model.MetaTittle, new { @class = "form-control", @id = "exampleInputEmail1", @placeholder = "عنوان صفحه را وارد کنید", @type = "text", rel = "popover", data_placement = "bottom", data_content = "می توانید عنوان صفحه را باز نویسی کنید. در صورت خالی بودن عنوان صفحه همان نام منو خواهد بود" })
                                        @Html.ValidationMessageFor(model => model.MetaTittle)
                                    </div>
                                    <div class="form-group">
                                        <label for="exampleInputEmail1">@Html.DisplayNameFor(model => model.MetaSeoName)</label>
                                        @Html.TextBoxFor(model => model.MetaSeoName, new { @class = "form-control", @id = "exampleInputEmail1", @placeholder = "آدرس SEO را وارد کنید", @type = "text", rel = "popover", data_placement = "bottom", data_content = "به عنوان آدرس صفحه مورد نظر در موتور های جست و جو مورد استفاده قرار می گیرد. در صورت خالی بودن فیلد آدرس همان نام منو خواهد بود" })
                                        @Html.ValidationMessageFor(model => model.MetaSeoName)
                                    </div>
                                </div>
                            </div>
                        </fieldset>
                        <fieldset style="height: 220px;">
                            <legend>انتشار</legend>
                            <div class="row">
                                <div class="row">
                                    <div class="col-lg-6 ">

                                        <div class="form-group" style="margin-right:10px">
                                            <label for="exampleInputEmail1">@Html.DisplayNameFor(model => model.Language)<i class="fa fa-star c-red f-10"></i></label>
                                            @Html.DropDownListFor(model => model.Language, ViewBag.Languages as SelectList, new { @class = "form-control", data_search = "true" })
                                            @Html.ValidationMessageFor(model => model.Language, "", new { @class = "form-error" })
                                        </div>

                                    </div>
                                    <div class="col-lg-6">
                                        <div class="form-group">
                                            <label for="exampleInputEmail1">@Html.DisplayNameFor(model => model.F_MenuID)<i class="fa fa-star c-red f-10"></i></label>
                                            @Html.DropDownListFor(model => model.F_MenuID, ViewBag.F_MenuIDs as SelectList, new { @class = "form-control", data_search = "true" })
                                            @Html.ValidationMessageFor(model => model.F_MenuID, "", new { @class = "form-error" })
                                        </div>
                                        <div class="form-group">
                                            <label for="exampleInputEmail1">
                                                @Html.DisplayNameFor(model => model.AllowComment)
                                                @Html.CheckBoxFor(model => model.AllowComment, new { @class = "form-control", data_checkbox = "icheckbox_square-blue" })
                                            </label>
                                            @Html.ValidationMessageFor(model => model.AllowComment)
                                        </div>
                                    </div>

                                </div>
                                <div class="row">
                                    <div class="col-lg-6">
                                        <div class="form-group" style="margin-right:10px">
                                            <p>مطلب شما آماده انتشار است می توانید هم اکنون آن را منتشر کنید یا بعدا آن را منتشر نمایید.</p>
                                            <div class="input-group">
                                                <div class="icheck-inline">
                                                    <label>@Html.RadioButtonFor(model => model.Status, true, new { @data_radio = "iradio_flat-blue" }) می خواهم نمایش داده شود</label>
                                                    <label>@Html.RadioButtonFor(model => model.Status, false, new { @checked = true, @data_radio = "iradio_flat-blue" })نمی خواهم نمایش داده شود</label>
                                                </div>
                                            </div>
                                        </div>

                                    </div>
                                </div>
                            </div>
                        </fieldset>
                    }
                </div>
            </div>
        </div>
        <button type="button" onclick="pipolinkClicked(this.id)" id="PipoModalLink_@Model.ID" class="btn btn-danger btn-rounded" data-toggle="modal" data-target="#modal-basic">حذف</button>
    </div>
</div>

<!-- BEGIN MODALS -->
<div class="modal fade" id="modal-basic" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true"><i class="icons-office-52"></i></button>
                <h2 class="modal-title"><strong>هشدار</strong></h2>
            </div>
            <div id="PipoModalBody" class="modal-body">
                آیا از انجام عملیات مورد نظر اطمینان خاطر دارید ؟<br>
            </div>
            @using (Html.BeginForm("PostDelete", "DynamicPage", new { ID = "" }, FormMethod.Post, new { Id = "PipoModalForm" }))
            {
                @Html.AntiForgeryToken()
                <div class="modal-footer">
                    <button type="button" class="btn btn-default btn-embossed" data-dismiss="modal">بستن</button>
                    <button type="submit" class="btn btn-primary btn-embossed">بله</button>
                </div>
            }
        </div>
    </div>
</div>
<!-- END MODALS -->