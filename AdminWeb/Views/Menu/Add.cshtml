@model AdminWeb.Models.DataModels.MenuDataModel
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section CSS_Requested{
    <link href="~/Content/assets/global/plugins/dropzone/dropzone.min.css" rel="stylesheet">
    <link href="~/Content/assets/global/plugins/input-text/style.min.css" rel="stylesheet">
    <link href="~/Content/assets/global/plugins/step-form-wizard/css/step-form-wizard.min.css" rel="stylesheet">
    <link href="~/Content/assets/global/plugins/summernote/summernote.min.css" rel="stylesheet">
    <link href="~/Content/assets/global/css/PipoStyle.css" rel="stylesheet" />
}

@section js_Requested
{
    <script src="~/Content/assets/global/plugins/switchery/switchery.min.js"></script> <!-- IOS Switch -->
    <script src="~/Content/assets/global/plugins/bootstrap-tags-input/bootstrap-tagsinput.min.js"></script> <!-- Select Inputs -->
    <script src="~/Content/assets/global/js/pages/form_icheck.js"></script>  <!-- Change Icheck Color - DEMO PURPOSE - OPTIONAL -->
    <script src="~/Content/assets/global/plugins/dropzone/dropzone.min.js"></script>  <!-- Upload Image & File in dropzone -->
    <script src="~/Content/assets/global/plugins/summernote/summernote.min.js"></script> <!-- Simple HTML Editor -->
    <script src="~/Content/assets/global/plugins/typed/typed.min.js"></script> <!-- Animated Typing -->
    <script src="~/Content/assets/global/js/pages/editor.js"></script>
    <script src="~/Content/assets/global/plugins/step-form-wizard/plugins/parsley/parsley.min.js"></script> <!-- OPTIONAL, IF YOU NEED VALIDATION -->
    <script src="~/Content/assets/global/plugins/step-form-wizard/js/step-form-wizard.js"></script> <!-- Step Form Validation -->
    <script src="~/Content/assets/global/js/pages/form_wizard.js"></script>
    <script src="~/Content/assets/global/plugins/noty/jquery.noty.packaged.min.js"></script>  <!-- Notifications -->
    <script src="~/Content/assets/global/js/pages/notifications.js"></script>
    <script>
        jQuery(document).ready(function () {
            generate('top', '.page-content', '', '@ViewBag.Notification', 'topbar');


            $("#Language").change(function () {
                $("#F_MenuID").empty();
                $("#select2-chosen-2").empty();
                $("#select2-chosen-2").append('انتخاب زیر منو ...');
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetLanguageMenus", "Menu")', // we are calling json method
                    dataType: 'json',
                    data: { lang: $("#Language").val() },
                    success: function (states) {
                        // states contains the JSON formatted list
                        // of states passed from the controller
                        $.each(states, function (i, state) {
                            $("#F_MenuID").append('<option value="' + state.Value + '">' + state.Text + '</option>');
                        }); // here we are adding option for States

                    },
                    error: function (ex) {
                        alert('Failed to retrieve states.' + ex);
                    }
                });
                return false;
            });
        });
        function myFunction() {
            var c = document.getElementsByClassName("note-editable")[0].innerHTML;
            document.getElementById("Descript").setAttribute("value", c);
        }
    </script>
}
<div class="row">
    <div class="col-lg-12">
        <div class="tabs tabs-linetriangle">
            <div class="tab-content center">
                <div class="tab-pane active" id="validation">
                    @using (Html.BeginForm("Add", "Menu", FormMethod.Post,
new { enctype = "multipart/form-data", @class = "wizard /*wizard-validation*/", data_style = "arrow", onsubmit = "myFunction()" }))
                    {
                        @Html.AntiForgeryToken()
                        <fieldset style="height: 660px;">
                            <legend>اطلاعات پایه</legend>
                            <div class="row">
                                <div class="col-lg-3 col-md-3">
                                    <div class="form-group">
                                        <label for="exampleInputEmail1">@Html.DisplayNameFor(model => model.Name)<i class="fa fa-star c-red f-10"></i></label>
                                        @Html.TextBoxFor(model => model.Name, new { @class = "form-control ", @id = "exampleInputEmail1", @placeholder = "نام را وارد کنید", @type = "text", required = "", data_parsley_group = "block0" })
                                        @Html.ValidationMessageFor(model => model.Name,"",new { @class="form-error"})
                                    </div>
                                    <div class="form-group">
                                        <label for="exampleInputEmail1">@Html.DisplayNameFor(model => model.Language)<i class="fa fa-star c-red f-10"></i></label>
                                        @Html.DropDownListFor(model => model.Language, ViewBag.Languages as SelectList, new { @class = "form-control", data_search = "true" })
                                        @Html.ValidationMessageFor(model => model.Language, "", new { @class = "form-error" })
                                    </div>
                                    <div class="form-group">
                                        <label for="exampleInputEmail1">@Html.DisplayNameFor(model => model.F_MenuID)</label>
                                        @Html.DropDownListFor(model => model.F_MenuID, ViewBag.F_MenuIDs as SelectList, new { @class = "form-control", data_search = "true" })
                                        @Html.ValidationMessageFor(model => model.F_MenuID)
                                    </div>
                                    <div class="form-group">
                                        <label for="exampleInputEmail1">@Html.DisplayNameFor(model => model.Weight)<i class="fa fa-star c-red f-10"></i></label>
                                        @Html.DropDownListFor(model => model.Weight, AdminWeb.Models.BLL.Tools.MenuWeightsCombo(), new { @class = "form-control", data_search = "true" })
                                        @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "form-error" })
                                    </div>

                                    <div class="fileinput fileinput-new" data-provides="fileinput">
                                        <label for="exampleInputEmail1">@Html.DisplayNameFor(model => model.Image)</label>
                                        <div class="fileinput-new thumbnail">
                                            <img data-src="" src="~/Content/assets/global/images/gallery/3.jpg" class="img-responsive" alt="gallery 3">
                                        </div>
                                        <div class="fileinput-preview fileinput-exists thumbnail"></div>
                                        <div>
                                            <span class="btn btn-default btn-file">
                                                <span class="fileinput-new">انتخاب تصویر ...</span><span class="fileinput-exists">ویرایش</span>
                                                <input type="file" name="MyFile">
                                            </span>
                                            <a href="#" class="btn btn-default fileinput-exists" data-dismiss="fileinput">حذف</a>
                                        </div>
                                        @Html.ValidationMessageFor(model => model.Image)
                                    </div>
                                </div>
                                <div class="col-lg-7">
                                    <div class="form-group">
                                        <label for="exampleInputEmail1">@Html.DisplayNameFor(model => model.Description)</label>
                                        @Html.TextBoxFor(model => model.Description, new { @class = "summernote", @id = "Descript", @type = "text" })
                                        @Html.ValidationMessageFor(model => model.Description)
                                    </div>
                                    <div class="form-group">
                                        <div class="icheck-inline">
                                            <label for="exampleInputEmail2" class="PipoCheckBox">
                                                @Html.DisplayNameFor(model => model.DisplayInFooter)
                                                @Html.CheckBoxFor(model => model.DisplayInFooter, new { data_checkbox = "icheckbox_square-blue", @id = "exampleInputEmail2" })
                                            </label>
                                            @Html.ValidationMessageFor(model => model.DisplayInFooter, "", new { @class = "form-error" })
                                            <label for="exampleInputEmail3" class="PipoCheckBox">
                                                @Html.DisplayNameFor(model => model.DisplayInSidebar)
                                                @Html.CheckBoxFor(model => model.DisplayInSidebar, new { @data_checkbox = "icheckbox_square-blue", @id = "exampleInputEmail3" })
                                            </label>
                                            @Html.ValidationMessageFor(model => model.DisplayInSidebar, "", new { @class = "form-error" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="exampleInputEmail1">@Html.DisplayNameFor(model => model.Type)<i class="fa fa-star c-red f-10"></i></label>
                                        @Html.DropDownListFor(model => model.Type, AdminWeb.Models.BLL.Tools.MenuTypesCombo(), new { @class = "form-control", style = "width: 50%;" })
                                        @Html.ValidationMessageFor(model => model.Type, "", new { @class = "form-error" })
                                    </div>
                                </div>
                            </div>
                        </fieldset>
                        <fieldset style="height: 250px;">
                            <legend>سئو</legend>
                            <div class="row">
                                <div class="col-lg-6">
                                    <div class="form-group">
                                        <label for="exampleInputEmail1">@Html.DisplayNameFor(model => model.MetaKeywords)</label>
                                        @Html.TextBoxFor(model => model.MetaKeywords, new { @class = "form-control", @id = "exampleInputEmail1", @placeholder = "کلمات کلیدی را وارد کنید", @type = "text", rel = "popover", data_placement = "bottom", data_content = "کلمات کلیدی در هدر صفحات گنجانده می شوند" })
                                        @Html.ValidationMessageFor(model => model.MetaKeywords)
                                    </div>
                                    <div class="form-group">
                                        <label for="exampleInputEmail1">@Html.DisplayNameFor(model => model.MetaDescription)</label>
                                        @Html.TextBoxFor(model => model.MetaDescription, new { @class = "form-control", @id = "exampleInputEmail1", @placeholder = "توضیحات را وارد کنید", @type = "text", rel = "popover", data_placement = "bottom", data_content = "توضیحات در هدر صفحات گنجانده می شود" })
                                        @Html.ValidationMessageFor(model => model.MetaDescription)
                                    </div>
                                </div>
                                <div class="col-lg-6">
                                    <div class="form-group">
                                        <label for="exampleInputEmail1">@Html.DisplayNameFor(model => model.MetaTittle)</label>
                                        @Html.TextBoxFor(model => model.MetaTittle, new { @class = "form-control", @id = "exampleInputEmail1", @placeholder = "عنوان صفحه را وارد کنید", @type = "text", rel = "popover", data_placement = "bottom", data_content = "می توانید عنوان صفحه را باز نویسی کنید. در صورت خالی بودن عنوان صفحه همان نام منو خواهد بود" })
                                        @Html.ValidationMessageFor(model => model.MetaTittle)
                                    </div>
                                    <div class="form-group">
                                        <label for="exampleInputEmail1">@Html.DisplayNameFor(model => model.MetaSeoName)</label>
                                        @Html.TextBoxFor(model => model.MetaSeoName, new { @class = "form-control", @id = "exampleInputEmail1", @placeholder = "آدرس SEO را وارد کنید", @type = "text", rel = "popover", data_placement = "bottom", data_content = "به عنوان آدرس صفحه مورد نظر در موتور های جست و جو مورد استفاده قرار می گیرد. در صورت خالی بودن فیلد آدرس همان نام منو خواهد بود" })
                                        @Html.ValidationMessageFor(model => model.MetaSeoName)
                                    </div>
                                </div>
                            </div>
                        </fieldset>
                        <fieldset style="height: 100px;">
                            <legend>پایان</legend>
                            <div class="row">
                                <div class="col-lg-8">
                                    <div class="form-group">
                                        <p>آیا می خواهید منوی ایجاد شده شما برای عموم نمایش داده شود یا فعلا مخفی بماند ؟</p>
                                        <div class="input-group">
                                            <div class="icheck-inline">


                                                <label>@Html.RadioButtonFor(model => model.Status, true, new { @data_radio = "iradio_flat-blue" }) می خواهم نمایش داده شود</label>
                                                <label>@Html.RadioButtonFor(model => model.Status, false, new { @checked = true, @data_radio = "iradio_flat-blue" })نمی خواهم نمایش داده شود</label>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </fieldset>
                    }
                </div>
            </div>
        </div>
    </div>
</div>